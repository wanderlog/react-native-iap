{"version":3,"names":["RNIapAmazonModule","NativeModules","fillProductsWithAdditionalData","items","user","getUser","currencies","CA","ES","AU","DE","IN","US","JP","GB","IT","BR","FR","currency","userMarketplaceAmazon","forEach","item"],"sources":["fillProductsWithAdditionalData.ts"],"sourcesContent":["import {NativeModules} from 'react-native';\n\nimport type {ProductCommon} from '../types';\n\nconst {RNIapAmazonModule} = NativeModules;\n\n/**\n * For Amazon products, we add the currency code from the user's information\n * since it isn't included in the product information.\n */\nexport const fillProductsWithAdditionalData = async <T extends ProductCommon>(\n  items: T[],\n): Promise<T[]> => {\n  if (RNIapAmazonModule) {\n    // On amazon we must get the user marketplace to detect the currency\n    const user = await RNIapAmazonModule.getUser();\n\n    const currencies = {\n      CA: 'CAD',\n      ES: 'EUR',\n      AU: 'AUD',\n      DE: 'EUR',\n      IN: 'INR',\n      US: 'USD',\n      JP: 'JPY',\n      GB: 'GBP',\n      IT: 'EUR',\n      BR: 'BRL',\n      FR: 'EUR',\n    };\n\n    const currency =\n      currencies[user.userMarketplaceAmazon as keyof typeof currencies];\n\n    // Add currency to items\n    items.forEach((item) => {\n      if (currency) {\n        item.currency = currency;\n      }\n    });\n  }\n\n  return items;\n};\n"],"mappings":";;;;;;;AAAA;;AAIA,MAAM;EAACA;AAAD,IAAsBC,0BAA5B;AAEA;AACA;AACA;AACA;;AACO,MAAMC,8BAA8B,GAAG,MAC5CC,KAD4C,IAE3B;EACjB,IAAIH,iBAAJ,EAAuB;IACrB;IACA,MAAMI,IAAI,GAAG,MAAMJ,iBAAiB,CAACK,OAAlB,EAAnB;IAEA,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAE,KADa;MAEjBC,EAAE,EAAE,KAFa;MAGjBC,EAAE,EAAE,KAHa;MAIjBC,EAAE,EAAE,KAJa;MAKjBC,EAAE,EAAE,KALa;MAMjBC,EAAE,EAAE,KANa;MAOjBC,EAAE,EAAE,KAPa;MAQjBC,EAAE,EAAE,KARa;MASjBC,EAAE,EAAE,KATa;MAUjBC,EAAE,EAAE,KAVa;MAWjBC,EAAE,EAAE;IAXa,CAAnB;IAcA,MAAMC,QAAQ,GACZZ,UAAU,CAACF,IAAI,CAACe,qBAAN,CADZ,CAlBqB,CAqBrB;;IACAhB,KAAK,CAACiB,OAAN,CAAeC,IAAD,IAAU;MACtB,IAAIH,QAAJ,EAAc;QACZG,IAAI,CAACH,QAAL,GAAgBA,QAAhB;MACD;IACF,CAJD;EAKD;;EAED,OAAOf,KAAP;AACD,CAjCM"}