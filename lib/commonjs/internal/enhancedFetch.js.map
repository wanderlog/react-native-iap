{"version":3,"names":["enhancedFetch","url","init","response","fetch","method","headers","Accept","body","JSON","stringify","ok","Object","assign","Error","statusText","statusCode","status","json"],"sources":["enhancedFetch.ts"],"sourcesContent":["interface OverwrittenRequestInit extends Omit<RequestInit, 'body'> {\n  body: Record<string, any>;\n}\n\nexport const enhancedFetch = async <T = any>(\n  url: string,\n  init?: OverwrittenRequestInit,\n) => {\n  const response = await fetch(url, {\n    method: init?.method ?? 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    ...(init?.body ? {body: JSON.stringify(init.body)} : {}),\n  });\n\n  if (!response.ok) {\n    throw Object.assign(new Error(response.statusText), {\n      statusCode: response.status,\n    });\n  }\n\n  return response.json() as Promise<T>;\n};\n"],"mappings":";;;;;;;AAIO,MAAMA,aAAa,GAAG,OAC3BC,GAD2B,EAE3BC,IAF2B,KAGxB;EACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;IAChCI,MAAM,EAAE,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,MAAN,KAAgB,KADQ;IAEhCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAFuB;IAMhC,IAAIL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEM,IAAN,GAAa;MAACA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACM,IAApB;IAAP,CAAb,GAAiD,EAArD;EANgC,CAAN,CAA5B;;EASA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;IAChB,MAAMC,MAAM,CAACC,MAAP,CAAc,IAAIC,KAAJ,CAAUX,QAAQ,CAACY,UAAnB,CAAd,EAA8C;MAClDC,UAAU,EAAEb,QAAQ,CAACc;IAD6B,CAA9C,CAAN;EAGD;;EAED,OAAOd,QAAQ,CAACe,IAAT,EAAP;AACD,CApBM"}