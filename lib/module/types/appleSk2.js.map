{"version":3,"names":["SubscriptionPlatform","productSk2Map","id","description","displayName","price","displayPrice","prod","title","productId","String","type","localizedPrice","currency","subscriptionSk2Map","subscription","platform","ios","subscriptionPeriodNumberIOS","subscriptionPeriod","value","subscriptionPeriodUnitIOS","unit","toUpperCase","transactionSk2Map","originalPurchaseDate","productID","purchaseDate","purchasedQuantity","purchase","transactionId","transactionDate","transactionReceipt","purchaseToken","quantityIOS","originalTransactionDateIOS","originalTransactionIdentifierIOS","offerSk2Map","offer","undefined","offerID","identifier","keyID","keyIdentifier","nonce","signature","timestamp","toString"],"sources":["appleSk2.ts"],"sourcesContent":["import type {PurchaseError} from '../purchaseError';\n\nimport type {\n  ProductIOS,\n  Purchase,\n  SubscriptionIOS,\n  SubscriptionIosPeriod,\n} from '.';\nimport type * as Apple from './apple';\nimport {SubscriptionPlatform} from '.';\n\nexport type SubscriptionPeriod = {\n  unit: 'day' | 'week' | 'month' | 'year';\n  value: number;\n};\n\nexport type PaymentMode = 'freeTrial' | 'payAsYouGo' | 'payUpFront';\n\nexport type SubscriptionOffer = {\n  displayPrice: string;\n  id: string;\n  paymentMode: PaymentMode;\n  period: SubscriptionPeriod;\n  periodCount: number;\n  price: number;\n  type: 'introductory' | 'promotional';\n};\n\nexport type SubscriptionInfo = {\n  introductoryOffer?: SubscriptionOffer;\n  promotionalOffers?: SubscriptionOffer[];\n  subscriptionGroupID: string;\n  subscriptionPeriod: SubscriptionPeriod;\n};\n\nexport type ProductSk2 = {\n  description: string;\n  displayName: string;\n  displayPrice: string;\n  id: number;\n  isFamilyShareable: boolean;\n  jsonRepresentation: string;\n  price: number;\n  subscription: SubscriptionInfo;\n  type: 'autoRenewable' | 'consumable' | 'nonConsumable' | 'nonRenewable';\n};\nexport const productSk2Map = ({\n  id,\n  description,\n  displayName,\n  price,\n  displayPrice,\n}: ProductSk2): ProductIOS => {\n  const prod: ProductIOS = {\n    title: displayName,\n    productId: String(id),\n    description,\n    type: 'iap',\n    price: String(price),\n    localizedPrice: displayPrice,\n    currency: '', // Not avaiable on new API, use localizedPrice instead\n  };\n  return prod;\n};\n\nexport const subscriptionSk2Map = ({\n  id,\n  description,\n  displayName,\n  price,\n  displayPrice,\n  subscription,\n}: ProductSk2): SubscriptionIOS => {\n  const prod: SubscriptionIOS = {\n    platform: SubscriptionPlatform.ios,\n    title: displayName,\n    productId: String(id),\n    description,\n    type: 'subs',\n    price: String(price),\n    localizedPrice: displayPrice,\n    currency: '', // Not avaiable on new API, use localizedPrice instead\n    subscriptionPeriodNumberIOS: `${subscription?.subscriptionPeriod?.value}`,\n    subscriptionPeriodUnitIOS:\n      subscription?.subscriptionPeriod?.unit.toUpperCase() as SubscriptionIosPeriod,\n  };\n  return prod;\n};\n\nexport type TransactionSk2 = {\n  appAccountToken: string;\n  appBundleID: string;\n  debugDescription: string;\n  deviceVerification: string;\n  deviceVerificationNonce: string;\n  expirationDate: number;\n  id: number;\n  isUpgraded: boolean;\n  jsonRepresentation: string;\n  offerID: string;\n  offerType: string;\n  originalID: string;\n  originalPurchaseDate: number;\n  ownershipType: string;\n  productID: string;\n  productType: string;\n  purchaseDate: number;\n  purchasedQuantity: number;\n  revocationDate: number;\n  revocationReason: string;\n  signedDate: number;\n  subscriptionGroupID: number;\n  webOrderLineItemID: number;\n};\n\nexport type TransactionError = PurchaseError;\n\n/**\n * Only one of `transaction` and `error` is not undefined at the time\n */\nexport type TransactionEvent = {\n  transaction?: TransactionSk2;\n  error?: TransactionError;\n};\n\nexport type SubscriptionStatus =\n  | 'expired'\n  | 'inBillingRetryPeriod'\n  | 'inGracePeriod'\n  | 'revoked'\n  | 'subscribed';\n\nexport type ProductStatus = {\n  state: SubscriptionStatus;\n};\n\nexport const transactionSk2Map = ({\n  id,\n  originalPurchaseDate,\n  productID,\n  purchaseDate,\n  purchasedQuantity,\n}: TransactionSk2): Purchase => {\n  const purchase: Purchase = {\n    productId: productID,\n    transactionId: String(id),\n    transactionDate: purchaseDate, //??\n    transactionReceipt: '', // Not available\n    purchaseToken: '', //Not avaiable\n    quantityIOS: purchasedQuantity,\n    originalTransactionDateIOS: String(originalPurchaseDate),\n    originalTransactionIdentifierIOS: String(id), // ??\n  };\n  return purchase;\n};\n\n/**\n * Payment discount interface @see https://developer.apple.com/documentation/storekit/skpaymentdiscount?language=objc\n */\nexport interface PaymentDiscountSk2 {\n  /**\n   * A string used to uniquely identify a discount offer for a product.\n   */\n  offerID: string;\n\n  /**\n   * A string that identifies the key used to generate the signature.\n   */\n  keyID: string;\n\n  /**\n   * A universally unique ID (UUID) value that you define.\n   */\n  nonce: string;\n\n  /**\n   * A UTF-8 string representing the properties of a specific discount offer, cryptographically signed.\n   */\n  signature: string;\n\n  /**\n   * The date and time of the signature's creation in milliseconds, formatted in Unix epoch time.\n   */\n  timestamp: number;\n}\n\nexport const offerSk2Map = (\n  offer: Apple.PaymentDiscount | undefined,\n): Record<keyof PaymentDiscountSk2, string> | undefined => {\n  if (!offer) {\n    return undefined;\n  }\n  return {\n    offerID: offer.identifier,\n    keyID: offer.keyIdentifier,\n    nonce: offer.nonce,\n    signature: offer.signature,\n    timestamp: offer.timestamp.toString(),\n  };\n};\n"],"mappings":"AASA,SAAQA,oBAAR,QAAmC,GAAnC;AAqCA,OAAO,MAAMC,aAAa,GAAG,QAMC;EAAA,IANA;IAC5BC,EAD4B;IAE5BC,WAF4B;IAG5BC,WAH4B;IAI5BC,KAJ4B;IAK5BC;EAL4B,CAMA;EAC5B,MAAMC,IAAgB,GAAG;IACvBC,KAAK,EAAEJ,WADgB;IAEvBK,SAAS,EAAEC,MAAM,CAACR,EAAD,CAFM;IAGvBC,WAHuB;IAIvBQ,IAAI,EAAE,KAJiB;IAKvBN,KAAK,EAAEK,MAAM,CAACL,KAAD,CALU;IAMvBO,cAAc,EAAEN,YANO;IAOvBO,QAAQ,EAAE,EAPa,CAOT;;EAPS,CAAzB;EASA,OAAON,IAAP;AACD,CAjBM;AAmBP,OAAO,MAAMO,kBAAkB,GAAG,SAOC;EAAA;;EAAA,IAPA;IACjCZ,EADiC;IAEjCC,WAFiC;IAGjCC,WAHiC;IAIjCC,KAJiC;IAKjCC,YALiC;IAMjCS;EANiC,CAOA;EACjC,MAAMR,IAAqB,GAAG;IAC5BS,QAAQ,EAAEhB,oBAAoB,CAACiB,GADH;IAE5BT,KAAK,EAAEJ,WAFqB;IAG5BK,SAAS,EAAEC,MAAM,CAACR,EAAD,CAHW;IAI5BC,WAJ4B;IAK5BQ,IAAI,EAAE,MALsB;IAM5BN,KAAK,EAAEK,MAAM,CAACL,KAAD,CANe;IAO5BO,cAAc,EAAEN,YAPY;IAQ5BO,QAAQ,EAAE,EARkB;IAQd;IACdK,2BAA2B,EAAG,GAAEH,YAAH,aAAGA,YAAH,gDAAGA,YAAY,CAAEI,kBAAjB,0DAAG,sBAAkCC,KAAM,EAT5C;IAU5BC,yBAAyB,EACvBN,YADuB,aACvBA,YADuB,iDACvBA,YAAY,CAAEI,kBADS,2DACvB,uBAAkCG,IAAlC,CAAuCC,WAAvC;EAX0B,CAA9B;EAaA,OAAOhB,IAAP;AACD,CAtBM;AAuEP,OAAO,MAAMiB,iBAAiB,GAAG,SAMD;EAAA,IANE;IAChCtB,EADgC;IAEhCuB,oBAFgC;IAGhCC,SAHgC;IAIhCC,YAJgC;IAKhCC;EALgC,CAMF;EAC9B,MAAMC,QAAkB,GAAG;IACzBpB,SAAS,EAAEiB,SADc;IAEzBI,aAAa,EAAEpB,MAAM,CAACR,EAAD,CAFI;IAGzB6B,eAAe,EAAEJ,YAHQ;IAGM;IAC/BK,kBAAkB,EAAE,EAJK;IAID;IACxBC,aAAa,EAAE,EALU;IAKN;IACnBC,WAAW,EAAEN,iBANY;IAOzBO,0BAA0B,EAAEzB,MAAM,CAACe,oBAAD,CAPT;IAQzBW,gCAAgC,EAAE1B,MAAM,CAACR,EAAD,CARf,CAQqB;;EARrB,CAA3B;EAUA,OAAO2B,QAAP;AACD,CAlBM;AAoBP;AACA;AACA;;AA4BA,OAAO,MAAMQ,WAAW,GACtBC,KADyB,IAEgC;EACzD,IAAI,CAACA,KAAL,EAAY;IACV,OAAOC,SAAP;EACD;;EACD,OAAO;IACLC,OAAO,EAAEF,KAAK,CAACG,UADV;IAELC,KAAK,EAAEJ,KAAK,CAACK,aAFR;IAGLC,KAAK,EAAEN,KAAK,CAACM,KAHR;IAILC,SAAS,EAAEP,KAAK,CAACO,SAJZ;IAKLC,SAAS,EAAER,KAAK,CAACQ,SAAN,CAAgBC,QAAhB;EALN,CAAP;AAOD,CAbM"}